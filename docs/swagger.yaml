definitions:
  model.AerospikeCluster:
    properties:
      auth-mode:
        type: string
      host:
        type: string
      password:
        type: string
      password-path:
        type: string
      port:
        type: integer
      use-services-alternate:
        type: boolean
      user:
        type: string
    type: object
  model.BackupDetails:
    properties:
      key:
        type: string
      last-modified:
        type: string
      size:
        type: integer
    type: object
  model.BackupPolicy:
    properties:
      bandwidth:
        type: integer
      file-limit:
        type: integer
      filter-exp:
        type: string
      max-records:
        type: integer
      max-retries:
        type: integer
      no-bins:
        type: boolean
      no-indexes:
        type: boolean
      no-records:
        type: boolean
      no-udfs:
        type: boolean
      parallel:
        type: integer
      records-per-second:
        type: integer
      remove-artifacts:
        type: boolean
      remove-files:
        type: boolean
      retry-delay:
        type: integer
      socket-timeout:
        type: integer
      total-timeout:
        type: integer
    type: object
  model.BackupRoutine:
    properties:
      after-digest:
        type: string
      backup-policy:
        type: string
      bin-list:
        items:
          type: string
        type: array
      incr-interval:
        type: integer
      interval:
        type: integer
      namespace:
        type: string
      node-list:
        items:
          $ref: '#/definitions/model.Node'
        type: array
      partition-list:
        type: string
      secret-agent:
        type: string
      set-list:
        items:
          type: string
        type: array
      source-cluster:
        type: string
      storage:
        type: string
    type: object
  model.Config:
    properties:
      aerospike-clusters:
        additionalProperties:
          $ref: '#/definitions/model.AerospikeCluster'
        type: object
      backup-policies:
        additionalProperties:
          $ref: '#/definitions/model.BackupPolicy'
        type: object
      backup-routines:
        additionalProperties:
          $ref: '#/definitions/model.BackupRoutine'
        type: object
      secret-agent:
        additionalProperties:
          $ref: '#/definitions/model.SecretAgent'
        type: object
      service:
        $ref: '#/definitions/model.HTTPServerConfig'
      storage:
        additionalProperties:
          $ref: '#/definitions/model.Storage'
        type: object
    type: object
  model.HTTPServerConfig:
    properties:
      address:
        type: string
      port:
        type: integer
      rate:
        $ref: '#/definitions/model.RateLimiterConfig'
    type: object
  model.Node:
    properties:
      ip:
        type: string
      port:
        type: integer
    type: object
  model.RateLimiterConfig:
    properties:
      size:
        type: integer
      tps:
        type: integer
      white-list:
        items:
          type: string
        type: array
    type: object
  model.RestoreNamespace:
    properties:
      destination:
        type: string
      source:
        type: string
    type: object
  model.RestorePolicy:
    properties:
      bandwidth:
        type: integer
      batch-size:
        type: integer
      bin-list:
        items:
          type: string
        type: array
      disable-batch-writes:
        type: boolean
      max-async-batches:
        type: integer
      namespace:
        $ref: '#/definitions/model.RestoreNamespace'
      no-generation:
        type: boolean
      no-indexes:
        type: boolean
      no-records:
        type: boolean
      no-udfs:
        type: boolean
      parallel:
        type: integer
      replace:
        type: boolean
      set-list:
        items:
          type: string
        type: array
      timeout:
        type: integer
      tps:
        type: integer
      unique:
        type: boolean
    type: object
  model.RestoreRequest:
    properties:
      destination:
        $ref: '#/definitions/model.AerospikeCluster'
      policy:
        $ref: '#/definitions/model.RestorePolicy'
      secret-agent:
        $ref: '#/definitions/model.SecretAgent'
      source:
        $ref: '#/definitions/model.Storage'
    type: object
  model.RestoreTimestampRequest:
    properties:
      destination:
        $ref: '#/definitions/model.AerospikeCluster'
      policy:
        $ref: '#/definitions/model.RestorePolicy'
      routine:
        type: string
      secret-agent:
        $ref: '#/definitions/model.SecretAgent'
      time:
        format: int64
        type: integer
    type: object
  model.SecretAgent:
    properties:
      address:
        type: string
      port:
        type: string
      timeout:
        description: timeout in milliseconds
        type: integer
      tls-ca:
        type: string
      tls-enabled:
        type: boolean
    type: object
  model.Storage:
    properties:
      path:
        type: string
      s3-endpoint-override:
        type: string
      s3-log-level:
        type: string
      s3-profile:
        type: string
      s3-region:
        type: string
      type:
        $ref: '#/definitions/model.StorageType'
    type: object
  model.StorageType:
    enum:
    - 0
    - 1
    type: integer
    x-enum-varnames:
    - Local
    - S3
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact: {}
  description: Aerospike Backup Service
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Backup Service REST API Specification
  version: 0.1.0
paths:
  /:
    get:
      operationId: root
      responses:
        "200":
          description: OK
      summary: Root endpoint.
      tags:
      - System
  /backup/full/list:
    get:
      operationId: getAvailableFullBackups
      parameters:
      - description: Backup routine name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Full backups by routine
          schema:
            additionalProperties:
              items:
                $ref: '#/definitions/model.BackupDetails'
              type: array
            type: object
        "404":
          description: Not Found
          schema:
            type: string
      summary: Get available full backups.
      tags:
      - Backup
  /backup/incremental/list:
    get:
      operationId: getAvailableIncrementalBackups
      parameters:
      - description: Backup routine name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Incremental backups by routine
          schema:
            additionalProperties:
              items:
                $ref: '#/definitions/model.BackupDetails'
              type: array
            type: object
        "404":
          description: Not Found
          schema:
            type: string
      summary: Get available incremental backups.
      tags:
      - Backup
  /config:
    get:
      operationId: readConfig
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Config'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Returns the configuration for the service.
      tags:
      - Configuration
    post:
      consumes:
      - application/json
      operationId: updateConfig
      parameters:
      - description: config
        in: body
        name: config
        required: true
        schema:
          $ref: '#/definitions/model.Config'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Updates the configuration for the service.
      tags:
      - Configuration
  /config/cluster:
    delete:
      operationId: deleteCluster
      parameters:
      - description: cluster Name
        in: query
        name: name
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Deletes a cluster from the configuration by name.
      tags:
      - Configuration
    get:
      operationId: readClusters
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              $ref: '#/definitions/model.AerospikeCluster'
            type: object
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Reads all Aerospike clusters from the configuration.
      tags:
      - Configuration
    post:
      consumes:
      - application/json
      operationId: addCluster
      parameters:
      - description: cluster name
        in: query
        name: name
        required: true
        type: string
      - description: cluster info
        in: body
        name: cluster
        required: true
        schema:
          $ref: '#/definitions/model.AerospikeCluster'
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Adds an Aerospike cluster to the config.
      tags:
      - Configuration
    put:
      consumes:
      - application/json
      operationId: updateCluster
      parameters:
      - description: cluster name
        in: query
        name: name
        required: true
        type: string
      - description: aerospike cluster
        in: body
        name: cluster
        required: true
        schema:
          $ref: '#/definitions/model.AerospikeCluster'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Updates an existing Aerospike cluster in the configuration.
      tags:
      - Configuration
  /config/policy:
    delete:
      operationId: deletePolicy
      parameters:
      - description: Policy Name
        in: query
        name: name
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Deletes a policy from the configuration by name.
      tags:
      - Configuration
    get:
      operationId: readPolicies
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              $ref: '#/definitions/model.BackupPolicy'
            type: object
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Reads all policies from the configuration.
      tags:
      - Configuration
    post:
      consumes:
      - application/json
      operationId: addPolicy
      parameters:
      - description: policy name
        in: query
        name: name
        required: true
        type: string
      - description: backup policy
        in: body
        name: storage
        required: true
        schema:
          $ref: '#/definitions/model.BackupPolicy'
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Adds a policy to the config.
      tags:
      - Configuration
    put:
      consumes:
      - application/json
      operationId: updatePolicy
      parameters:
      - description: policy name
        in: query
        name: name
        required: true
        type: string
      - description: backup policy
        in: body
        name: storage
        required: true
        schema:
          $ref: '#/definitions/model.BackupPolicy'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Updates an existing policy in the configuration.
      tags:
      - Configuration
  /config/routine:
    delete:
      operationId: deleteRoutine
      parameters:
      - description: routine name
        in: query
        name: name
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Deletes a backup routine from the configuration by name.
      tags:
      - Configuration
    get:
      operationId: readRoutines
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              $ref: '#/definitions/model.BackupRoutine'
            type: object
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Reads all routines from the configuration.
      tags:
      - Configuration
    post:
      consumes:
      - application/json
      operationId: addRoutine
      parameters:
      - description: routine name
        in: query
        name: name
        required: true
        type: string
      - description: backup routine
        in: body
        name: storage
        required: true
        schema:
          $ref: '#/definitions/model.BackupRoutine'
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Adds a backup routine to the config.
      tags:
      - Configuration
    put:
      consumes:
      - application/json
      operationId: updateRoutine
      parameters:
      - description: routine name
        in: query
        name: name
        required: true
        type: string
      - description: backup routine
        in: body
        name: storage
        required: true
        schema:
          $ref: '#/definitions/model.BackupRoutine'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Updates an existing routine in the configuration.
      tags:
      - Configuration
  /config/storage:
    delete:
      operationId: deleteStorage
      parameters:
      - description: storage name
        in: query
        name: name
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Deletes a storage from the configuration by name.
      tags:
      - Configuration
    get:
      operationId: readStorage
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              $ref: '#/definitions/model.Storage'
            type: object
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Reads all storage from the configuration.
      tags:
      - Configuration
    post:
      consumes:
      - application/json
      operationId: addStorage
      parameters:
      - description: storage name
        in: query
        name: name
        required: true
        type: string
      - description: backup storage
        in: body
        name: storage
        required: true
        schema:
          $ref: '#/definitions/model.Storage'
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Adds a storage cluster to the config.
      tags:
      - Configuration
    put:
      consumes:
      - application/json
      operationId: updateStorage
      parameters:
      - description: storage name
        in: query
        name: name
        required: true
        type: string
      - description: backup storage
        in: body
        name: storage
        required: true
        schema:
          $ref: '#/definitions/model.Storage'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Updates an existing storage in the configuration.
      tags:
      - Configuration
  /health:
    get:
      operationId: health
      responses:
        "200":
          description: OK
      summary: Health endpoint.
      tags:
      - System
  /ready:
    get:
      operationId: ready
      responses:
        "200":
          description: OK
      summary: Readiness endpoint.
      tags:
      - System
  /restore/full:
    post:
      consumes:
      - application/json
      description: Specify the directory parameter for the full backup restore.
      operationId: restoreFull
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.RestoreRequest'
      responses:
        "202":
          description: Job ID (int64)
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Trigger an asynchronous full restore operation.
      tags:
      - Restore
  /restore/incremental:
    post:
      consumes:
      - application/json
      description: Specify the file parameter to restore from an incremental backup
        file.
      operationId: restoreIncremental
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.RestoreRequest'
      responses:
        "202":
          description: Job ID (int64)
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Trigger an asynchronous incremental restore operation.
      tags:
      - Restore
  /restore/status:
    get:
      operationId: restoreStatus
      parameters:
      - description: Job ID to retrieve the status
        in: query
        name: jobId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Job status
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Retrieve status for a restore job.
      tags:
      - Restore
  /restore/timestamp:
    post:
      consumes:
      - application/json
      description: Restores backup from given point in time
      operationId: restoreTimestamp
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.RestoreTimestampRequest'
      responses:
        "202":
          description: Job ID (int64)
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Trigger an asynchronous restore operation to specific point in time.
      tags:
      - Restore
  /version:
    get:
      operationId: version
      responses:
        "200":
          description: version
          schema:
            type: string
      summary: Returns application version.
      tags:
      - System
swagger: "2.0"
